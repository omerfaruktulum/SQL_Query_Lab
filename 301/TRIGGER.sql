-- SET STATISTIC IO ON
SELECT * ,
(SELECT TOP 1 VALUE_ FROM THERMOVALUES
WHERE DEVICEID=T.ID
ORDER BY DATE_ DESC
) LASTVALUE
FROM THERMOMETERS T

UPDATE THERMOMETERS SET LASTVALUE = 
(SELECT TOP 1 VALUE_ FROM THERMOVALUES
WHERE DEVICEID=T.ID
ORDER BY DATE_ DESC
)

UPDATE THERMOMETERS SET LASTDATE = 
(SELECT TOP 1 DATE_ FROM THERMOVALUES
WHERE DEVICEID=T.ID
ORDER BY DATE_ DESC
)

CREATE TRIGGER THERMOVALUES_INSERT
ON THERMOVALUES
AFTER INSERT
AS
BEGIN
DECLARE @DEVICEID AS INT
DECLARE @VALUE AS FLOAT
DECLARE @DATE AS DATETIME
SELECT @DEVICEID=DEVICEID,@VALUE=VALUE_,@DATE=DATE_  FROM INSERTED

UPDATE THERMOMETERS SET LASTVALUE=@VALUE,LASTDATE=@DATE 
WHERE ID=@DEVICEID

END

SET STATISTICS IO ON 
SELECT * FROM THERMOMETERS


-- TRIGGER ILE LOG TUTMA

CREATE TRIGGER TRG_ITEMS_UPDATE
ON ITEMS
AFTER UPDATE 
AS
BEGIN 
DECLARE @LOGACTIONTYPE  AS VARCHAR(10)='UPDATE'

INSERT INTO ITEMS_LOG ( BRAND,ITEMCODE ,ITEMNAME ,CATEGORY1,CATEGORY2,CATEGORY3,UNITPRICE,LOG_ACTIONTYPE ,LOG_DATE,LOG_USERNAME,LOG_HOSTNAME,LOG_PROGRAMNAME )
SELECT BRAND,ITEMCODE,ITEMNAME,CATEGORY1,CATEGORY2,CATEGORY3,UNITPRICE,@LOGACTIONTYPE,GETDATE(),SUSER_SNAME(),HOST_NAME(),PROGRAM_NAME() FROM DELETED

END

UPDATE ITEMS SET UNITPRICE=1.5 WHERE ID=1

SELECT * FROM ITEMS_LOG
SELECT * FROM ITEMS ORDER BY ID 



ALTER TRIGGER TRG_ITEMS_DELETE
ON ITEMS
AFTER DELETE
AS
BEGIN 
DECLARE @LOGACTIONTYPE  AS VARCHAR(10)='DELETE'

INSERT INTO ITEMS_LOG ( BRAND,ITEMCODE ,ITEMNAME ,CATEGORY1,CATEGORY2,CATEGORY3,UNITPRICE,LOG_ACTIONTYPE ,LOG_DATE,LOG_USERNAME,LOG_HOSTNAME,LOG_PROGRAMNAME )
SELECT BRAND,ITEMCODE,ITEMNAME,CATEGORY1,CATEGORY2,CATEGORY3,UNITPRICE,@LOGACTIONTYPE,GETDATE(),SUSER_SNAME(),HOST_NAME(),PROGRAM_NAME() FROM DELETED

END

DELETE FROM ITEMS WHERE ID= 3
SELECT * FROM ITEMS
SELECT * FROM ITEMS_LOG


CREATE TRIGGER TRG_ITEMS_UPDATE_DELETE
ON ITEMS
AFTER UPDATE,DELETE
AS
BEGIN 

DECLARE @INSERTEDCOUNT AS INT
DECLARE @DELETEDCOUNT AS INT
DECLARE @LOGACTIONTYPE  AS VARCHAR(10)


SELECT @INSERTEDCOUNT = COUNT(*) FROM inserted
SELECT @DELETEDCOUNT = COUNT(*) FROM deleted 

IF @INSERTEDCOUNT > 0 AND @DELETEDCOUNT>0
    SET @LOGACTIONTYPE ='UPDATE'
IF @INSERTEDCOUNT = 0 AND @DELETEDCOUNT>0
    SET @LOGACTIONTYPE ='DELETE'   


INSERT INTO ITEMS_LOG ( BRAND,ITEMCODE ,ITEMNAME ,CATEGORY1,CATEGORY2,CATEGORY3,UNITPRICE,LOG_ACTIONTYPE ,LOG_DATE,LOG_USERNAME,LOG_HOSTNAME,LOG_PROGRAMNAME )
SELECT BRAND,ITEMCODE,ITEMNAME,CATEGORY1,CATEGORY2,CATEGORY3,UNITPRICE,@LOGACTIONTYPE,GETDATE(),SUSER_SNAME(),HOST_NAME(),PROGRAM_NAME() FROM DELETED

END

SELECT * FROM ITEMS WHERE ID = 4 ORDER BY ID

UPDATE ITEMS SET UNITPRICE=20,BRAND='OYUNCAKS' WHERE ID =4
DELETE FROM ITEMS WHERE ID =4
SELECT * FROM ITEMS_LOG